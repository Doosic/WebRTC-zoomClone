
    * 무엇이 실시간 기능을 가능케하는가? HTTP vs WebSockets
      둘다 통신 규약이다(Web Protocol)

    - 강의에서 사용할 것은 WebSockets 이다.
      WebSockets덕에 실시간 채팅,공지 같은것을 만들 수 있다.

    * http (stateless)
      - 유저가 request(요청)을 보내면 서버는 response(응답)하는 구조로
        동작한다. 너무나도 기본적인것. 중요 특징은 stateless라는 부분이다.
        서버는 유저를 기억하지 못한다. 응답후 모든걸 잊는다. 서버가 하나하나 기억하고있는 것이 아니기에
        요청시 필요한 모든 정보를 보내야 하는 특징이 있다.


    * WebSockets (real-time)
      - WebSocket 연결(connection)은 브라우저가 서버로
        WebSockets request를 보내면, 서버가 받거나 거절한다.
        이때에 서버가 받는다면 연결이 성립(establish)된다.
        브라우저와 서버가 실시간으로 연결되는 것이다.
        서로 이어지는 터널을 만들어준다고 보면 된다.

        서로 연결되어있는 상태이기 때문에 서버는 유저를 기억하고있다.
        원한다면 서버가 유저에게 메세지를 보낼 수 있다.
        request, response 과정 불필요
        서버는 유저에게 메세지를 보낼 수 있고, 유저도 마찬가지로 보낼 수 있다.
        한 번씩 주고받는 것이 아닌 보내고싶은 만큼 보낼 수 있다.

        정리: 브라우저와 서버사이에 bi-directional(양방향)한 연결이 있어서
             서로에게 바로 갈수있다. 서로 connection만 되어있다면 서로 메세지를
             주고받을 수 있다.

             WebSocket은 어떤 프로그래밍 언어에 국한돼지 않는다. protocol이다.
             브라우저 to 서버만 동작하는게 아닌 서버 to 서버도 가능하다.